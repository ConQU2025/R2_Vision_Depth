<launch>
  <!-- 设置本地模型路径 -->
  <env name="GAZEBO_MODEL_PATH" value="$(find conqu_vision)/models:$(optenv GAZEBO_MODEL_PATH)" />
  <env name="GAZEBO_RESOURCE_PATH" value="$(find conqu_vision):$(optenv GAZEBO_RESOURCE_PATH)" />

  <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/> 
  <arg name="verbose" default="false"/>

  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find conqu_vision)/worlds/robocon25.world"/>
    <arg name="verbose" 	value="true"/>
    <arg name="paused"		value="false"/>
  </include>
  
  <!-- 全局设置robot_description参数，这样所有节点都可以访问 -->
  <param name="robot_description" textfile="$(find conqu_vision)/models/r2.model" />
  
  <!-- Spawn a robot into Gazebo -->
  <group ns="backboard">
    <node name="spawn_backboard" pkg="gazebo_ros" type="spawn_model" 
            args="-file $(find conqu_vision)/models/backboard.model -urdf -model backboard -x 5 -Y -1.5708" />
  </group>
  
  <group ns="r2">
    <node name="spawn_r2" pkg="gazebo_ros" type="spawn_model" 
          args="-file $(find conqu_vision)/models/r2.model -urdf -model r2 -x 3.2 " />
    
    <!-- 添加robot_state_publisher来发布TF变换 -->
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher">
      <param name="tf_prefix" value="r2" />
      <!-- 确保robot_description参数可用 -->
      <remap from="robot_description" to="/robot_description" />
    </node>
    

    <!-- 添加joint_state_publisher -->
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
      <remap from="robot_description" to="/robot_description" />
    </node>
  </group>
  
  <!-- 添加键盘控制节点 -->
  <node pkg="teleop_twist_keyboard" type="teleop_twist_keyboard.py" name="teleop_twist_keyboard" output="screen">
    <remap from="cmd_vel" to="r2/cmd_vel"/>
  </node>
  
  <!-- 添加RViz可视化 -->
  <arg name="rvizconfig" default="$(find conqu_vision)/rviz/default.rviz" />
  <node name="rviz" pkg="rviz" type="rviz" args="-d $(arg rvizconfig)" required="true" />
  
  <!-- 启动篮球框检测节点 -->
  <node name="backboard_detector_cpp" pkg="conqu_vision" type="backboard_detector" output="screen" />
</launch>